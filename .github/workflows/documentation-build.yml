name: Build, upload and deploy github pages

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

permissions:
  contents: read
  packages: read
  pages: write
  id-token: write

env:
  REGISTRY: ghcr.io
  IMAGE_PUML_NAME: ${{ github.repository }}/puml
  BRANCH_NAME: "${{github.ref_name}}"

jobs:
  build-documentation-pages:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3
      - name: Run Puml Container to render and copy image files
        run: |
          cd docs
          docker build --pull -t pumlimage -f PumlDockerfile .
          CID=$(docker create pumlimage)
          docker start $CID
          docker cp $CID:/app/output ${{ github.workspace }}/docs/hugo/static/puml_img
          docker rm -v $CID
      - name: Run Hugo Container and build pages
        # build temporary container (with the hugo image as base) to copy documentation files, build pages and
        # copy back the rendered files; this way no docker-in-docker or root user is necessary
        run: |
          cd docs
          docker build -t tempimage --build-arg "TAG=${BRANCH_NAME/\//-}" -f Dockerfile.temp .
          CID=$(docker create tempimage -d hugoPublic --baseURL "${{ steps.pages.outputs.base_url }}/" --minify)
          docker start -a $CID
          docker cp $CID:/app/hugoPublic ${{ github.workspace }}/docs/hugo/public
          docker rm -v $CID
          docker image rm tempimage
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ${{ github.workspace }}/docs/hugo/public
  # Deployment job
  deploy-documentation-pages:
    if: github.ref_name == 'master'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-documentation-pages
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2